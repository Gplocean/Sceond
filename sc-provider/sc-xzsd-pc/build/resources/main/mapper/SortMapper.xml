<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.GoodsSortControl.dao.GoodsSortDao">
<!--新增商品分类-->
  <insert id="addGoodsSort" parameterType="com.xzsd.pc.GoodsSortControl.entity.GoodsSortInfo">

    insert into t_goods_classification(
        class_id,
        class_name,
        class_parent,
        remarks,
        goods_code,
        is_deleted,
        gmt_create,
        create_by,
        gmt_modified,
        last_modified_by,
        version
    )
    VALUES (
    #{classCode},
    #{className},
    #{classParent},
    #{remarks},
    now(),
    0,
    now(),
    #{createBy},
    now(),
    #{lastModifiedBy},
    0
    )
  </insert>
<resultMap id="oneGoodsSort" type="com.xzsd.pc.GoodsSortControl.entity.OneGoodsSort">
    <id column="class_id" property="classCode" jdbcType="VARCHAR"/>
    <result column="class_name" property="className" jdbcType="VARCHAR"/>
    <result column="class_parent" property="classParent" jdbcType="VARCHAR"/>
    <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
    <result column="version" property="version" jdbcType="VARCHAR"/>
    <collection property="twoGoodsSort" ofType="com.xzsd.pc.GoodsSortControl.entity.TwoGoodsSort">
        <id column="code" property="Code" jdbcType="VARCHAR"/>
        <result column="name" property="Name" jdbcType="VARCHAR"/>
        <result column="parent" property="Parent" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="edition" property="version" jdbcType="VARCHAR"/>
    </collection>
</resultMap>
    <!--查询商品分类详情-->
<select id="getGoodsSort" parameterType="com.xzsd.pc.GoodsSortControl.entity.GoodsSortInfo" resultType="com.xzsd.pc.GoodsSortControl.entity.GoodsSortInfo">
    select
    a.class_name,
    a.class_id,
    a.class_parent,
    a.remarks,
    a.version
    from t_goods_classification a
    where is_deleted = 0  and a.class_id =#{classCode}
</select>

    <!--查询商品分类列表-->
    <select id="listGoodsSort" resultMap="oneGoodsSort">
select
    a.class_name ,
    a.class_id ,
    a.class_parent,
    a.remarks ,
    a.version,
    b.class_name as name,
    b.class_id as code,
    b.class_parent as parent,
    b.remarks as remark,
    b.version as edition
    from t_goods_classification a
    left join t_goods_classification b
    on(b.class_parent = a.class_id and b.is_deleted != 1)
    where a.class_parent = "0"
    and a.is_deleted = 0

</select>

    <!--修改商品分类-->
    <update id="updateGoodsSort" parameterType="com.xzsd.pc.GoodsSortControl.entity.GoodsSortInfo" >
        update  t_goods_classification
        set
            class_id = #{classCode},
            class_name = #{className},
            remarks = #{remarks},
            version = version+1,
            gmt_modified = now(),
            last_modified_by  = #{lastModifiedBy}
           where is_deleted = 0 and
           class_id =#{classCode}
           and version = #{version}
    </update>

    <!--删除商品分类-->
    <update id="deleteGoodsSort" parameterType="com.xzsd.pc.GoodsSortControl.entity.GoodsSortInfo" >
        update  t_goods_classification
        set
            gmt_modified = now(),
            last_modified_by  = #{lastModifiedBy},
            is_deleted = 1,
            version = version + 1
            where class_id = #{classCode}
    </update>
    <!--统计商品分类名-->
<select id="countSortName" parameterType="com.xzsd.pc.GoodsSortControl.entity.GoodsSortInfo" resultType="Integer">
    select  count(class_name)
    from t_goods_classification
    where is_deleted = 0
    and class_name = #{className}

</select>
</mapper>